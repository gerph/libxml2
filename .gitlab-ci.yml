# RISC OS CI build of the libxml2 library and tools
#


#### Builds ####
cross-compile:
  # Builds using the cross-compiling toolchain
  stage: build
  script:
    - |
      cd RISCOS
      ./build-release.sh
      cd ..

  artifacts:
      paths:
          - RISCOS
      expire_in: 1 day

  tags:
    - riscos

#### Build archive by making the zip in RISC OS format
archive:
  stage: archive
  dependencies:
    - cross-compile

  script:
    - |
      cd RISCOS/Release
      # Archive the release files in RISC OS format
      pip install --user rozipinfo
      python -m rozipfile --verbose --create ../../archive.zip *
      echo RISC OS archive contents:
      python -m rozipfile --list ../../archive.zip
      cd ../..

    - |
      # If we wanted to version it by the library version, we could use this
      libxml_version=$(sed '/define LIBXML_DOTTED_VERSION/ ! d ; s/.*LIBXML_DOTTED_VERSION *"\(.*\)"/\1/' RISCOS/include/libxml/h/xmlversion)
      # Except, I've been versioning the earlier versions with port version numbers.
      # So let's use that.
      version=$(sed '/MajorVersion / ! d ; s/.*MajorVersion *"\(.*\)"/\1/' RISCOS/VersionNum)
      version=$version-$(git rev-parse --short HEAD)
      echo "This is version: $version (of LibXML $libxml_version)"
      mv archive.zip LibXML2-$version.zip

  artifacts:
      when: always
      paths:
          - LibXML2-*.zip


#### Build with build service ####
# (too slow to build right now)
.robuild:
  # Builds using the RISC OS Build service.
  stage: build
  script:
    - |
      set -o pipefail
      # Zip up the source to send to robuild
      zip -q9r /tmp/source-archive.zip * .robuild.yaml

      # Fetch the build client
      curl -s -L -o riscos-build-online https://github.com/gerph/robuild-client/releases/download/v0.05/riscos-build-online && chmod +x riscos-build-online

      # Send the archive file to build service
      # Note: This is being sent directly to the back end to avoid the gateway that times out at 10 minutes.
      ./riscos-build-online -i /tmp/source-archive.zip -a off -s ws://backend0.build.riscos.online:13254/ -t 1800 -o /tmp/built

    - |
      # If we wanted to version it by the library version, we could use this
      libxml_version=$(sed '/define LIBXML_DOTTED_VERSION/ ! d ; s/.*LIBXML_DOTTED_VERSION *"\(.*\)"/\1/' RISCOS/include/libxml/h/xmlversion)
      # Except, I've been versioning the earlier versions with port version numbers.
      # So let's use that.
      version=$(sed '/MajorVersion / ! d ; s/.*MajorVersion *"\(.*\)"/\1/' RISCOS/xsltproc/VersionNum)
      version=$version-$(git rev-parse --short HEAD)
      echo "This is version: $version (of LibXML $libxml_version)"
      if [ -f /tmp/built,a91 ] ; then
          cp /tmp/built,a91 "LibXML2-$version.zip"
      else
          echo "No archive was built?"
          exit 1
      fi

  artifacts:
      when: always
      paths:
          - LibXML2-*.zip

  tags:
    - linux


#### Stages to execute ####
stages:
  - build
  - archive
