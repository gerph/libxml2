# RISC OS CI build through JFPatch as a service.
#
# To reuse this configuration with your own repository:
#
#   - Create a .robuild.yaml to describe what should be built on RISC OS.
#       - `jobs.build.script` should be a list of commands to run on RISC OS
#       - `jobs.build.artifacts.path` should be the directory to zip.
#   - Create a VersionNum file if you wish to use the automated versioning
#     in the same style as the RISC OS sources. [optional]
#   - Update the 3rd step ('give the archive a versioned name') to give a
#     suitable name for the archive.
#   - Update the artifacts path to include the same names.
#


#### Builds ####
cross-compile:
  # Builds using the cross-compiling toolchain
  stage: build
  script:
    - |
      cd RISCOS
      riscos-amu -f MakefileLib,fe1 export
      riscos-amu -f MakefileTools,fe1 TARGET=xmllint
      riscos-amu -f MakefileTools,fe1 TARGET=xmlcatalog
      mkdir -p ../Release
      cp aif32/xmlcatalog,ff8 ../Release/xmlcatalog,ff8
      cp aif32/xmllint,ff8    ../Release/xmllint,ff8
      cd ../Release
      zip -9r ../archive.zip *
      cd ..

    - |
      version=$(sed '/define LIBXML_DOTTED_VERSION/ ! d ; s/.*LIBXML_DOTTED_VERSION *"\(.*\)"/\1/' RISCOS/include/libxml/h/xmlversion)
      version=$version-$(git rev-parse --short HEAD)
      echo "This is version: $version"
      mv archive.zip LibXML2-$version.zip

  artifacts:
      when: always
      paths:
          - LibXML2-*.zip

  tags:
    - riscos


#### Build with build service ####
# (too slow to build right now)
.robuild:
  # Builds using the RISC OS Build service.
  stage: build
  script:
    - |
      set -o pipefail
      # Zip up the source to send to robuild
      zip -q9r /tmp/source-archive.zip * .robuild.yaml

      # Fetch the build client
      curl -s -L -o riscos-build-online https://github.com/gerph/robuild-client/releases/download/v0.05/riscos-build-online && chmod +x riscos-build-online

      # Send the archive file to build service
      # Note: This is being sent directly to the back end to avoid the gateway that times out at 10 minutes.
      ./riscos-build-online -i /tmp/source-archive.zip -a off -s ws://backend0.build.riscos.online:13254/ -t 1800 -o /tmp/built

    - |
      version=$(sed '/define LIBXML_DOTTED_VERSION/ ! d ; s/.*LIBXML_DOTTED_VERSION *"\(.*\)"/\1/' RISCOS/include/libxml/h/xmlversion)
      version=$version-$(git rev-parse --short HEAD)
      echo "This is version: $version"
      if [ -f /tmp/built,a91 ] ; then
          cp /tmp/built,a91 "LibXML2-$version.zip"
      else
          echo "No archive was built?"
          exit 1
      fi

  artifacts:
      when: always
      paths:
          - LibXML2-*.zip

  tags:
    - linux


#### Stages to execute ####
stages:
  - build
